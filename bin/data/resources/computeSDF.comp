#version 440

layout(local_size_x = 1, local_size_y = 1) in;

layout(r16f, binding = 0) uniform readonly image2D rawDepthImage;
layout(rgba32f, binding = 1) uniform writeonly image2D world_output;

// Kinect Data
uniform float _zeroPlaneDist;
uniform float _zeroPixelSize;

const float WIDTH = 640;
const float HEIGHT = 480;

vec3 kinectDepthToWorld(ivec2 pixel_coords)
{
	float wz = imageLoad(rawDepthImage, pixel_coords).r * 2048;
	float factor = 2 * _zeroPixelSize * wz / _zeroPlaneDist;
	float wx = (pixel_coords.x - WIDTH/2) * factor;
	float wy = (pixel_coords.y - HEIGHT/2) * factor;

	// NOTE: Y AND Z ARE SWAPPED
	return vec3(wx, -wy, -wz);
}

void main() {
  // base pixel colour for image
  //vec4 pixel = vec4(1.0, 1.0, 1.0, 1.0);
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  vec4 pixel = vec4(kinectDepthToWorld(pixel_coords), 1.0);

  // Problem: openGL reads textures from bottom
  pixel_coords = ivec2(pixel_coords.x, HEIGHT - pixel_coords.y);
  imageStore(world_output, pixel_coords, pixel);
}
