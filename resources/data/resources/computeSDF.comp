#version 440 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(r32f, binding = 0) uniform writeonly image3D model_output;

uniform float _stepSize;
uniform vec3 _point;
uniform mat4x4 _modelMatrix;

void main() {
  // base pixel colour for image
  ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);

  vec3 worldPosition = (_modelMatrix * vec4((pixel_coords + vec3(0.5, 0.5, 0.5))*_stepSize, 1)).xyz;

  float value = distance(_point, worldPosition) - 2;
  value /= 2;

  imageStore(model_output, pixel_coords, vec4(value));


  // NOTE: Nvidia could use derivatives for normal maps;

  // Problem: openGL reads textures from bottom
}
