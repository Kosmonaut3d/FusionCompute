#version 440

layout(local_size_x = 1024) in;

layout(std430, binding = 0) buffer data
{
	uint g_idata[640*480];
};

layout(std430, binding = 1) buffer odata
{
	uint g_odata[300];
};

shared uint sdata[gl_WorkGroupSize.x];

uniform int iterations = 128;
uniform int datasize = 100;

const float WIDTH2 = 320; //halfed
const float HEIGHT2 = 240;

void main() {

	uint tid = gl_LocalInvocationID.x;
	uint i = gl_GlobalInvocationID.x;

	sdata[tid] = 1;//i;// g_idata[i];
	
	memoryBarrier();
	
	/*// Initial step, used for trees that are not power of 2
	if (i < iterations && (i + iterations) < datasize) 
	{
		sdata[tid] += sdata[tid + iterations];
	}

	memoryBarrier();
	*/

	for (unsigned int s=gl_WorkGroupSize.x/2; s>0; s>>=1)
	{
		if (tid < s) 
		{
			sdata[tid] += sdata[tid + s];
			memoryBarrier();
		}
	}

	if (tid == 0) 
	{
		g_odata[gl_WorkGroupID.x] = sdata[0]; //sdata[0];// sdata[0];
	}

	/*
	// Fill in
	val[id] = 1; //id+1;

	memoryBarrier();

	// Initial step, used for trees that are not power of 2
	if (id < iterations && (id + iterations) < datasize) 
	{
		val[id] += val[id + iterations];
	}

	memoryBarrier();

	for (unsigned int s=iterations/2; s>0; s>>=1)
	{
		if (id < s) 
		{
			val[id] += val[id + s];
		}
		memoryBarrier();
	}
	*/
}
